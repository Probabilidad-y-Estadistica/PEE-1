#Presentar en un histograma
s = seq(-4, 4, 0.1)
hist(promEst,
main="Promedio estandarizados y distribuciÃ³n normal estandar",
breaks = 50,
xaxt="n",
ylab="Densidad",
xlab="x",
freq=FALSE)
lines(s,
dnorm(s, mean = 0, sd = 1),
lty = 1,
lwd = 2)
polygon(s,
dnorm(s, mean = 0, sd = 1),
col = rgb(1, 0, 0, alpha = 0.5))
axis(1, at=s,las=1)
legend("topleft",
legend = c("Promedio estandarizado",
"DistribuciÃ³n normal estandar"),
lty = 1, col = c("grey","red"), lwd =1, box.lty =1)
# EJ 3
# DistribuciÃ³n Normal(-4,16)
# PT 1) n = 10 ^ 3
a = rnorm(10^3,-4, sqrt(16))
# media empÃ­rica de a
muEmp = mean(a)
# media teÃ³rica
muTeo = -4
#DesviÃ³n estandar teÃ³rica
desvTeo = sqrt(16)
# Valor estandarizado de mediana empÃ­ricia
medEsta = sqrt(1000) * ((muEmp - muTeo)/desvTeo)
# PT 2)
promEst <- 0
for(i in 1:500){
ab = rnorm(10^3,-4, sqrt(16))
muEmpb = mean(ab)
promEst[i] <- sqrt(10^3) * ((muEmpb - muTeo)/desvTeo)
}
#Presentar en un histograma
s = seq(-4, 4, 0.1)
hist(promEst,
main="Promedio estandarizados y distribuciÃ³n normal estandar",
breaks = 50,
xaxt="n",
ylab="Densidad",
xlab="x",
freq=FALSE)
lines(s,
dnorm(s, mean = 0, sd = 1),
lty = 1,
lwd = 2)
polygon(s,
dnorm(s, mean = 0, sd = 1),
col = rgb(1, 0, 0, alpha = 0.5))
axis(1, at=s,las=1)
legend("topleft",
legend = c("Promedio estandarizado",
"DistribuciÃ³n normal estandar"),
lty = 1, col = c("grey","red"), lwd =1, box.lty =1)
#Presentar en un histograma
s = seq(-4, 4, 0.1)
hist(promEst,
main="Promedio estandarizados y distribuciÃ³n normal estandar",
breaks = 50,
xaxt="n",
ylab="Densidad",
xlab="x",
freq=FALSE)
lines(s,
dnorm(s, mean = 0, sd = 1),
lty = 1,
lwd = 2)
polygon(s,
dnorm(s, mean = 0, sd = 1),
col = rgb(1, 0, 0, alpha = 0.5))
axis(1, at=s,las=1)
legend("topleft",
legend = c("Promedio estandarizado",
"DistribuciÃ³n normal estandar"),
lty = 1, col = c("grey","red"), lwd =1, box.lty =1)
a = rbinom(10^2,30, 0.15)
boxplot.stats(a)
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues,
group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues,
group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues,
group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 3
# DistribuciÃ³n Normal(-4,16)
# PT 1) n = 10 ^ 3
a = rnorm(10^3,-4, sqrt(16))
# media empÃ­rica de a
muEmp = mean(a)
# media teÃ³rica
muTeo = -4
#DesviÃ³n estandar teÃ³rica
desvTeo = sqrt(16)
# Valor estandarizado de mediana empÃ­ricia
medEsta = sqrt(1000) * ((muEmp - muTeo)/desvTeo)
# PT 2)
promEst <- 0
for(i in 1:500){
ab = rnorm(10^3,-4, sqrt(16))
muEmpb = mean(ab)
promEst[i] <- sqrt(10^3) * ((muEmpb - muTeo)/desvTeo)
}
#Presentar en un histograma
s = seq(-4, 4, 0.1)
hist(promEst,
main="Promedio estandarizados y distribuciÃ³n normal estandar",
breaks = 50,
xaxt="n",
ylab="Densidad",
xlab="x",
freq=FALSE)
lines(s,
dnorm(s, mean = 0, sd = 1),
lty = 1,
lwd = 2)
polygon(s,
dnorm(s, mean = 0, sd = 1),
col = rgb(1, 0, 0, alpha = 0.5))
axis(1, at=s,las=1)
legend("topleft",
legend = c("Promedio estandarizado",
"DistribuciÃ³n normal estandar"),
lty = 1, col = c("grey","red"), lwd =1, box.lty =1)
a = rbinom(10^2,30, 0.15)
boxplot(#values ~ group,
#data,
a,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
axis(2, at=seq(0, 30, 1),las=2)
boxplot.stats(a)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues))#,
#group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(#values ~ group,
#data,
a,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues))#,
#group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(#values ~ group,
data,
a,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues))#,
#group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(#values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues))#,
#group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
# EJ 1
# distribuciÃ³n binoamial binomial (30 ,  0.15)
# n = 10 ^ (2 al 5)
# rbinom(
#       n,     NÃºmero de observaciones aleatorias a ser generadas
#       size,  NÃºmero de ensayos (> = 0)
#       prob)  La probabilidad de Ã©xito en cada ensayo
# Generamos 4 constantes "a", "b", "c" y "d" aplicando la distribuciÃ³n binomial
# para los tamaÃ±os de muestra 10^2, 10^3, 10^4 y 10^5 respectivamente
a = rbinom(10^2,30, 0.15)
b = rbinom(10^3,30, 0.15)
c = rbinom(10^4,30, 0.15)
d = rbinom(10^5,30, 0.15)
# Para graficar las 4 mustras en un mismo grÃ¡fico de cajas generamos un array
# con los resultados
randomValues <- c(a,b,c,d)
# agregamos un data.frame para identificar cada grÃ¡fico
data <- data.frame(values =randomValues,
group = c("10^2","10^3","10^4","10^5"))
# Con boxplot generamos el grÃ¡fico de cajas agregado color para distiguir
# cada grÃ¡fico y borramos el eje "y" para agregar uno mÃ¡s exacto
boxplot(values ~ group,
data,
col = c("pink",
"beige",
"lightblue",
"lightgreen"),
main = "DistribuciÃ³n binomial",
xlab = "Muestras",
ylab = "Valor variable aleatoria",
yaxt='n')
boxplot.stats(a)
# Agregamos eje "y" mÃ¡s exacto
axis(2, at=seq(0, 30, 1),las=2)
a
